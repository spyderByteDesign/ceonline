<?php

/**
 * Implements hook_commerce_checkout_complete().
 */
function ceo_custom_commerce_checkout_complete($order) {
  $args = array(
    ':order_id' => $order->order_number,
  );
  $product_ids = db_query("SELECT p.commerce_product_product_id AS commerce_product_product_id
   FROM {commerce_line_item} li
   JOIN {field_data_commerce_product} p ON (p.entity_id = li.line_item_id)
   WHERE li.order_id = :order_id AND li.type = 'product'", $args)->fetchCol();

  foreach ($product_ids as $key => $value) {
    $product = commerce_product_load($value);
    watchdog('insert_product_id', $value);
    if ($product->type == 'video_product_type') {
      foreach ($product->field_videos['und'] as $videos) {
        watchdog('insert_target_id', $videos['target_id']);
        watchdog('insert_target_id', $order->uid);

        db_insert('ceo_custom_video_purchases')
          ->fields(array(
            'nid' => $videos['target_id'],
            'uid' => $order->uid,
            'order_number' => $order->order_number,
          ))
          ->execute();
      }
    }
  }

}


/**
 * Implements hook_node_grants().
 */
function ceo_custom_node_grants($account, $op) {
  global $user;
  $videos_purchased = array();
  $grants = array();
  $video_query = db_select('ceo_custom_video_purchases', 'vp')
    ->fields('vp', array('nid'))
    ->condition('uid', $user->uid)
    ->execute()
    ->fetchAll();

  if (!empty($video_query)) {
    foreach ($video_query as $record) {
      $videos_purchased[] = $record->nid;
    }
    $grants['videos_purchased'] = $videos_purchased;
  }
  return $grants;
}

/**
 * Implements hook_node_access_records().
 */
function ceo_custom_node_access_records($node) {
  if ($node->type == 'training_video') {
    $grants = array();

    $grants[] = array(
      'nid' => $node->nid,
      'gid' => $node->nid,
      'realm' => 'videos_purchased',
      'grant_view' => 1,
      'grant_update' => 0,
      'grant_delete' => 0,
      'priority' => 0,
    );
    $grants[] = array(
      'nid' => $node->nid,
      'gid' => 0,
      'realm' => 'all',
      'grant_view' => 0,
      'grant_update' => 0,
      'grant_delete' => 0,
      'priority' => 0,
    );
    return $grants;
  }
  else {
    return NULL;
  }
}


/**
 * Implements hook_form_alter().
 */
function ceo_custom_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'video_product_type_node_form') {
    $form['field_product']['und']['form']['actions']['ief_add_save']['#attributes']['class'][] = 'element-invisible';
  }
}
